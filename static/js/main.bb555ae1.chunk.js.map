{"version":3,"sources":["mock-data.js","api.js","Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["mockData","extractLocations","events","map","event","location","Set","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","a","encodeCode","encodeURIComponent","fetch","then","res","json","catch","error","access_token","localStorage","setItem","checkToken","accessToken","result","getEvents","NProgress","start","href","startsWith","done","getAccessToken","token","url","axios","get","data","locations","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","Event","state","showDetails","show","setState","showButton","this","props","className","summary","dateTime","htmlLink","description","onClick","Component","EventList","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","submitNumber","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.bb555ae1.chunk.js","sourcesContent":["\nconst mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n];\n\nexport { mockData };\n","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        'https://qjro534x8h.execute-api.us-west-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        return mockData;\n    }\n\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = 'https://qjro534x8h.execute-api.us-west-2.amazonaws.com/dev/api/get-events' + '/' + token;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://qjro534x8h.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n};\n//","import React, { Component } from \"react\";\n\nclass Event extends Component {\n    state = {\n        showDetails: false\n    };\n    showDetails = () => {\n        if (this.state.show === true) {\n            this.setState({ show: false, showButton: 'show details' });\n        } else {\n            this.setState({ show: true, showButton: 'hide details' });\n        }\n    };\n    render() {\n        const { event } = this.props;\n        return (\n            <div className=\"eventContainer\">\n                <h1>{event.summary}</h1>\n                <p>{event.start.dateTime}</p>\n                <p>{event.location}</p>\n                {this.state.showDetails && (\n                    <div className='eventDetails'>\n                        <h2>About event:</h2>\n                        <a href={event.htmlLink}>See Details on Google Calendar</a>\n                        <p>{event.description}</p>\n                    </div>\n                )}\n                <button\n                    className=\"show-btn\"\n                    onClick={() => this.showDetails()}\n                >\n                    {!this.state.showDetails ? 'show details' : 'hide details'}\n                </button>\n            </div>\n        );\n\n    }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n            <ul className=\"EventList\">\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n            query: value,\n            suggestions,\n        });\n    };\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(suggestion);\n    }\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <input\n                    type=\"text\"\n                    className=\"city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\n                />\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n\n                    {this.state.suggestions.map((suggestion) => (\n                        <li\n                            key={suggestion}\n                            onClick={() => this.handleItemClicked(suggestion)}\n                        >{suggestion}</li>\n                    ))}\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\n                        <b>See all cities</b>\n                    </li>\n\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n    state = {\n        numberOfEvents: 32,\n    };\n\n    submitNumber = (event) => {\n        const numberOfEvents = event.target.value;\n        this.setState({\n            numberOfEvents,\n        });\n    }\n    render() {\n        return (\n            <div className=\"numberOfEvents\">\n                <input\n                    type=\"text\"\n                    className=\"numberInput\"\n                    value={this.state.numberOfEvents}\n                    onChange={this.submitNumber}\n                />\n            </div>\n        )\n    }\n}\n\nexport default NumberOfEvents;\n","import React, { Component } from 'react';\nimport { getEvents, extractLocations } from './api';\nimport \"./nprogress.css\";\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: []\n  }\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents =\n        location === \"all\"\n          ? events\n          : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents,\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}